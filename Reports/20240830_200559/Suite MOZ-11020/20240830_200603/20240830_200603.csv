Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Suite MOZ-11020,Chrome 128.0.0.0,,,30-08-2024 20:21:56,30-08-2024 20:25:19,3m - 23.393s,PASSED
,,,,,,,
Test Cases/MOZ-11020/TC 5_MOZ_11533 Verify linking after Refund Capture,Chrome 128.0.0.0,,,30-08-2024 20:21:56,30-08-2024 20:24:07,2m - 10.709s,PASSED
demoPackage.MozartLogin.LoginWithChromeForEK(),Chrome 128.0.0.0,,,30-08-2024 20:21:57,30-08-2024 20:23:23,1m - 25.818s,PASSED
uniqueNumber = utilityClass.GenericMethods.UniqueNumberGenerator(),Chrome 128.0.0.0,,,30-08-2024 20:23:23,30-08-2024 20:23:23,0.335s,PASSED
"click(findTestObject(""EK_Objects/Page_Mozart - Dashboard/a_Refunds""))",Chrome 128.0.0.0,,,30-08-2024 20:23:23,30-08-2024 20:23:24,0.342s,PASSED
"click(findTestObject(""EK_Objects/Page_Mozart - Dashboard/a_Refund Capture""))",Chrome 128.0.0.0,,,30-08-2024 20:23:24,30-08-2024 20:23:29,5.483s,PASSED
"selectOptionByValue(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/SelectRefundTypes""), ""RF_Both"", false)",Chrome 128.0.0.0,,,30-08-2024 20:23:29,30-08-2024 20:23:30,0.686s,PASSED
"sendKeys(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/documentNumber_Textbox""), ""6747279623"")",Chrome 128.0.0.0,,,30-08-2024 20:23:30,30-08-2024 20:23:31,0.842s,PASSED
"click(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/country_Button""))",Chrome 128.0.0.0,,,30-08-2024 20:23:31,30-08-2024 20:23:31,0.559s,PASSED
"sendKeys(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/country_Button_Inside_TextBox""), ""IN - India"")",Chrome 128.0.0.0,,,30-08-2024 20:23:31,30-08-2024 20:23:32,0.572s,PASSED
"sendKeys(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/country_Button_Inside_TextBox""), Keys.chord(ENTER))",Chrome 128.0.0.0,,,30-08-2024 20:23:32,30-08-2024 20:23:32,0.457s,PASSED
"selectOptionByValue(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/requestedFOP_DropDown""), ""CA"", false)",Chrome 128.0.0.0,,,30-08-2024 20:23:32,30-08-2024 20:23:33,1.088s,PASSED
"sendKeys(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/couponsRequested_TextBox""), ""1"")",Chrome 128.0.0.0,,,30-08-2024 20:23:33,30-08-2024 20:23:34,0.535s,PASSED
"sendKeys(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/passengerRemarks_TextBox""), uniqueNumber)",Chrome 128.0.0.0,,,30-08-2024 20:23:34,30-08-2024 20:23:34,0.570s,PASSED
"selectOptionByValue(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/title_PassengerDetails_Select""), ""Mr"", false)",Chrome 128.0.0.0,,,30-08-2024 20:23:34,30-08-2024 20:23:35,0.776s,PASSED
"sendKeys(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/passengerName_PassengerDetails_TextBox""), ""automationTest"")",Chrome 128.0.0.0,,,30-08-2024 20:23:35,30-08-2024 20:23:36,0.581s,PASSED
"sendKeys(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/emailAddress_PassengerDetails_TextBox""), ""Katalon@studio.com"")",Chrome 128.0.0.0,,,30-08-2024 20:23:36,30-08-2024 20:23:36,0.578s,PASSED
"selectOptionByLabel(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/select_Currency""), ""INR"", false)",Chrome 128.0.0.0,,,30-08-2024 20:23:36,30-08-2024 20:23:37,0.790s,PASSED
"click(findTestObject(""EK_Objects/Page_Mozart - RefundsCapture/send_Button""))",Chrome 128.0.0.0,,,30-08-2024 20:23:37,30-08-2024 20:23:38,0.669s,PASSED
requestId = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>,Chrome 128.0.0.0,,,30-08-2024 20:23:38,30-08-2024 20:23:38,0.004s,PASSED
"for ([i = 0, i <= 5, (i++)])",Chrome 128.0.0.0,,,30-08-2024 20:23:38,30-08-2024 20:23:50,12.148s,PASSED
"apiRequests.apiConnection.runAuthToken(findTestObject(""API/Auth Token""))",Chrome 128.0.0.0,,,30-08-2024 20:23:50,30-08-2024 20:23:55,4.871s,PASSED
"pnrWaiverResponse = sendRequest(findTestObject(""API/MOZ_11020_API/moz_11533_pnr_waiver_request""))",Chrome 128.0.0.0,,,30-08-2024 20:23:55,30-08-2024 20:23:56,1.226s,PASSED
"verifyResponseStatusCode(pnrWaiverResponse, 200)",Chrome 128.0.0.0,,,30-08-2024 20:23:56,30-08-2024 20:23:56,0.005s,PASSED
"mi_pnr_waiver_remarks = ""select * from bdmozart.mi_pnr_waiver_remarks where remarkstext = '"" + uniqueNumber + ""'""",Chrome 128.0.0.0,,,30-08-2024 20:23:56,30-08-2024 20:23:56,0.002s,PASSED
"waiverId = database.DatabaseUtils.executeQuery(mi_pnr_waiver_remarks, ""waiver_id"", 1)",Chrome 128.0.0.0,,,30-08-2024 20:23:56,30-08-2024 20:24:03,6.870s,PASSED
"md_rfnd_pnr_waivers = ""select * from bdmozart.md_rfnd_pnr_waivers where idrequest = '"" + requestId + ""'"" + "" order by id desc"" + "" """,Chrome 128.0.0.0,,,30-08-2024 20:24:03,30-08-2024 20:24:03,0.003s,PASSED
"waiverIdLinkedToRequestId = database.DatabaseUtils.executeQuery(md_rfnd_pnr_waivers, ""idmipnrwaiver"", 1)",Chrome 128.0.0.0,,,30-08-2024 20:24:03,30-08-2024 20:24:07,4.109s,PASSED
"verifyMatch(waiverIdLinkedToRequestId, waiverId, false)",Chrome 128.0.0.0,,,30-08-2024 20:24:07,30-08-2024 20:24:07,0.028s,PASSED
,,,,,,,
Test Cases/MOZ-11020/TC 4_MOZ_11533 Verify linking after Json request,Chrome 128.0.0.0,,,30-08-2024 20:24:07,30-08-2024 20:24:19,12.214s,PASSED
uniqueNumber = utilityClass.GenericMethods.UniqueNumberGenerator(),Chrome 128.0.0.0,,,30-08-2024 20:24:07,30-08-2024 20:24:07,0.006s,PASSED
demoPackage.UtilityDemo.requestNumber(),Chrome 128.0.0.0,,,30-08-2024 20:24:07,30-08-2024 20:24:07,0.025s,PASSED
"apiRequests.apiConnection.runAuthToken(findTestObject(""API/Auth Token""))",Chrome 128.0.0.0,,,30-08-2024 20:24:07,30-08-2024 20:24:08,0.311s,PASSED
"pnrWaiverResponse = sendRequest(findTestObject(""API/MOZ_11020_API/moz_11533_pnr_waiver_request""))",Chrome 128.0.0.0,,,30-08-2024 20:24:08,30-08-2024 20:24:08,0.605s,PASSED
"verifyResponseStatusCode(pnrWaiverResponse, 200)",Chrome 128.0.0.0,,,30-08-2024 20:24:08,30-08-2024 20:24:08,0.004s,PASSED
"fullRefundResponse = sendRequest(findTestObject(""API/MOZ_11020_API/moz_11533_full_refund-json""))",Chrome 128.0.0.0,,,30-08-2024 20:24:08,30-08-2024 20:24:09,1.030s,PASSED
"verifyResponseStatusCode(fullRefundResponse, 200)",Chrome 128.0.0.0,,,30-08-2024 20:24:09,30-08-2024 20:24:09,0.004s,PASSED
"mozartRequestId = getElementPropertyValue(fullRefundResponse, ""data[0].mozart_request_id"")",Chrome 128.0.0.0,,,30-08-2024 20:24:09,30-08-2024 20:24:10,0.115s,PASSED
"println(""The mozart_request_id is: "" + mozartRequestId)",Chrome 128.0.0.0,,,30-08-2024 20:24:10,30-08-2024 20:24:10,0.006s,PASSED
"mi_pnr_waiver_remarks = ""select * from bdmozart.mi_pnr_waiver_remarks where remarkstext = '"" + uniqueNumber + ""'""",Chrome 128.0.0.0,,,30-08-2024 20:24:10,30-08-2024 20:24:10,0.002s,PASSED
"waiverId = database.DatabaseUtils.executeQuery(mi_pnr_waiver_remarks, ""waiver_id"", 1)",Chrome 128.0.0.0,,,30-08-2024 20:24:10,30-08-2024 20:24:14,4.898s,PASSED
"println(""The Waiver_id is: "" + waiverId)",Chrome 128.0.0.0,,,30-08-2024 20:24:14,30-08-2024 20:24:14,0.003s,PASSED
"md_rfnd_pnr_waivers = ""select * from bdmozart.md_rfnd_pnr_waivers where idrequest = '"" + mozartRequestId + ""'"" + "" order by id desc"" + "" """,Chrome 128.0.0.0,,,30-08-2024 20:24:14,30-08-2024 20:24:14,0.002s,PASSED
"waiverIdLinkedToRequestId = database.DatabaseUtils.executeQuery(md_rfnd_pnr_waivers, ""idmipnrwaiver"", 1)",Chrome 128.0.0.0,,,30-08-2024 20:24:14,30-08-2024 20:24:19,4.931s,PASSED
"verifyMatch(waiverIdLinkedToRequestId, waiverId, false)",Chrome 128.0.0.0,,,30-08-2024 20:24:19,30-08-2024 20:24:19,0.003s,PASSED
,,,,,,,
Test Cases/MOZ-11020/TC 3_MOZ_11335 Verify PNR Waiver Input WS available to all client airlines,Chrome 128.0.0.0,,,30-08-2024 20:24:19,30-08-2024 20:24:25,5.683s,PASSED
"PnrWaiverController_check = database.DBConnection.executeQuerys(""mozart_emirates"", ""select * from bdmozart.mc_endpoints_exposed"", ""enabled"", 7)",Chrome 128.0.0.0,,,30-08-2024 20:24:20,30-08-2024 20:24:24,4.563s,PASSED
"apiRequests.apiConnection.runAuthToken(findTestObject(""API/Auth Token""))",Chrome 128.0.0.0,,,30-08-2024 20:24:24,30-08-2024 20:24:24,0.261s,PASSED
"response = sendRequest(findTestObject(""API/MOZ_11020_API/pnr_waiver_request""))",Chrome 128.0.0.0,,,30-08-2024 20:24:24,30-08-2024 20:24:25,0.572s,PASSED
"if (PnrWaiverController_check == ""t"")",Chrome 128.0.0.0,,,30-08-2024 20:24:25,30-08-2024 20:24:25,0.006s,PASSED
,,,,,,,
Test Cases/MOZ-11020/TC 2_MOZ-11334 Verify Inclusion of Waiver Effective and Expiry Dates in WS Response,Chrome 128.0.0.0,,,30-08-2024 20:24:25,30-08-2024 20:24:26,1.069s,PASSED
"apiRequests.apiConnection.runAuthToken(findTestObject(""API/Auth Token""))",Chrome 128.0.0.0,,,30-08-2024 20:24:25,30-08-2024 20:24:26,0.238s,PASSED
"response = sendRequest(findTestObject(""API/MOZ_11020_API/pnr_waiver_request""))",Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.433s,PASSED
responseBody = response.getResponseText(),Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.002s,PASSED
println(JsonOutput.prettyPrint(responseBody)),Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.051s,PASSED
"verifyResponseStatusCode(response, 200)",Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.004s,PASSED
slurper = new groovy.json.JsonSlurper(),Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.002s,PASSED
jsonResponse = slurper.parseText(response.getResponseText()),Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.002s,PASSED
"utilityClass.CustomSoftAssert.assertTrue(waiver_effective_date != null, ""waiver_effective_date is missing in the response"")",Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.075s,PASSED
"utilityClass.CustomSoftAssert.assertTrue(waiver_expiry_date != null, ""waiver_expiry_date is missing in the response"")",Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.003s,PASSED
utilityClass.CustomSoftAssert.assertAll(),Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:26,0.002s,PASSED
,,,,,,,
Test Cases/MOZ-11020/TC 1_MOZ_11333 Verify Replacement of Internal Structure Table Names from MARS to PNR,Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:25:19,53.291s,PASSED
"mi_pnr_waiver = database.DatabaseUtils.checkTableExists(""mi_pnr_waiver"")",Chrome 128.0.0.0,,,30-08-2024 20:24:26,30-08-2024 20:24:33,6.859s,PASSED
"utilityClass.CustomSoftAssert.assertTrue(mi_pnr_waiver, ""The mi_pnr_waiver table should be available in the database."")",Chrome 128.0.0.0,,,30-08-2024 20:24:33,30-08-2024 20:24:33,0.002s,PASSED
"mi_pnr_waiver_remarks = database.DatabaseUtils.checkTableExists(""mi_pnr_waiver_remarks"")",Chrome 128.0.0.0,,,30-08-2024 20:24:33,30-08-2024 20:24:41,8.060s,PASSED
"utilityClass.CustomSoftAssert.assertTrue(mi_pnr_waiver_remarks, ""The mi_pnr_waiver_remarks table should be available in the database."")",Chrome 128.0.0.0,,,30-08-2024 20:24:41,30-08-2024 20:24:41,0.002s,PASSED
"md_rfnd_pnr_waivers = database.DatabaseUtils.checkTableExists(""md_rfnd_pnr_waivers"")",Chrome 128.0.0.0,,,30-08-2024 20:24:41,30-08-2024 20:24:53,12.194s,PASSED
"utilityClass.CustomSoftAssert.assertTrue(md_rfnd_pnr_waivers, ""The md_rfnd_pnr_waivers table should be available in the database."")",Chrome 128.0.0.0,,,30-08-2024 20:24:53,30-08-2024 20:24:53,0.002s,PASSED
"controller_name_column_row_value = database.DBConnection.SQL(""select * from bdmozart.mc_endpoints_exposed where controller_name = 'PnrWaiverController'"", ""controller_name"", 1)",Chrome 128.0.0.0,,,30-08-2024 20:24:53,30-08-2024 20:25:15,21.162s,PASSED
"utilityClass.CustomSoftAssert.assertEquals(controller_name_column_row_value, ""PnrWaiverController"", ""Expected Column value is = PnrWaiverController"")",Chrome 128.0.0.0,,,30-08-2024 20:25:15,30-08-2024 20:25:15,0.008s,PASSED
"description_column_row_value = database.DBConnection.SQL(""select * from bdmozart.mc_file_type where code = 'MWF'"", ""description"", 1)",Chrome 128.0.0.0,,,30-08-2024 20:25:15,30-08-2024 20:25:19,4.786s,PASSED
"utilityClass.CustomSoftAssert.assertEquals(description_column_row_value, ""Pnr Waiver File"", ""Expected Column value is = Pnr Waiver File"")",Chrome 128.0.0.0,,,30-08-2024 20:25:19,30-08-2024 20:25:19,0.003s,PASSED
utilityClass.CustomSoftAssert.assertAll(),Chrome 128.0.0.0,,,30-08-2024 20:25:19,30-08-2024 20:25:19,0.001s,PASSED
